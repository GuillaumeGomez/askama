name: CI

on:
  push:
    branches: ['master']
  pull_request:
  schedule:
    - cron: "32 4 * * 5"

jobs:
  Test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta]
        exclude:
          - os: macos-latest
            rust: beta
          - os: windows-latest
            rust: beta
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --all-targets
      - run: cargo nextest run

  Package:
    strategy:
      matrix:
        package: [
          rinja, rinja_actix, rinja_axum, rinja_derive, rinja_derive_standalone,
          rinja_parser, rinja_rocket, rinja_warp, testing, examples/actix-web-app,
        ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: Swatinem/rust-cache@v2
      - run: cd ${{ matrix.package }} && cargo nextest run
      - run: cd ${{ matrix.package }} && cargo clippy --all-targets -- -D warnings

  Rustfmt:
    runs-on: ubuntu-latest
    steps:
      # No need to test `rinja_derive_standalone`. It has same the `src` folder as `rinja_derive`.
      # No need to run the checks in parallel. They are fast enough.
      # No need for caching. No code is compiled at all.
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: |
          set -eu
          for PKG in \
            rinja rinja_actix rinja_axum rinja_derive rinja_derive_standalone \
            rinja_parser rinja_rocket rinja_warp testing examples/actix-web-app
          do
            cd "$PKG"
            echo "Testing: $PKG"
            cargo fmt -- --check
            cd -
          done

  MSRV:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.71.0"
      - run: cargo check --lib -p rinja --all-features

  Audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
